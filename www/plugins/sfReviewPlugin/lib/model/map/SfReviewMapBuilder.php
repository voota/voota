<?php


/**
 * This class adds structure of 'sf_review' table to 'propel' DatabaseMap object.
 *
 *
 * This class was autogenerated by Propel 1.3.0-dev on:
 *
 * Tue Dec 15 19:32:11 2009
 *
 *
 * These statically-built map classes are used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    plugins.sfReviewPlugin.lib.model.map
 */
class SfReviewMapBuilder implements MapBuilder {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'plugins.sfReviewPlugin.lib.model.map.SfReviewMapBuilder';

	/**
	 * The database map.
	 */
	private $dbMap;

	/**
	 * Tells us if this DatabaseMapBuilder is built so that we
	 * don't have to re-build it every time.
	 *
	 * @return     boolean true if this DatabaseMapBuilder is built, false otherwise.
	 */
	public function isBuilt()
	{
		return ($this->dbMap !== null);
	}

	/**
	 * Gets the databasemap this map builder built.
	 *
	 * @return     the databasemap
	 */
	public function getDatabaseMap()
	{
		return $this->dbMap;
	}

	/**
	 * The doBuild() method builds the DatabaseMap
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function doBuild()
	{
		$this->dbMap = Propel::getDatabaseMap(SfReviewPeer::DATABASE_NAME);

		$tMap = $this->dbMap->addTable(SfReviewPeer::TABLE_NAME);
		$tMap->setPhpName('SfReview');
		$tMap->setClassname('SfReview');

		$tMap->setUseIdGenerator(true);

		$tMap->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11);

		$tMap->addColumn('ENTITY_ID', 'EntityId', 'INTEGER', false, 11);

		$tMap->addColumn('VALUE', 'Value', 'INTEGER', true, 11);

		$tMap->addForeignKey('SF_GUARD_USER_ID', 'SfGuardUserId', 'INTEGER', 'sf_guard_user', 'ID', true, 11);

		$tMap->addForeignKey('SF_REVIEW_TYPE_ID', 'SfReviewTypeId', 'INTEGER', 'sf_review_type', 'ID', false, 11);

		$tMap->addForeignKey('SF_REVIEW_STATUS_ID', 'SfReviewStatusId', 'INTEGER', 'sf_review_status', 'ID', true, 11);

		$tMap->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('COOKIE', 'Cookie', 'VARCHAR', false, 45);

		$tMap->addColumn('IP_ADDRESS', 'IpAddress', 'VARCHAR', false, 45);

		$tMap->addColumn('TEXT', 'Text', 'VARCHAR', false, 420);

		$tMap->addColumn('MODIFIED_AT', 'ModifiedAt', 'TIMESTAMP', false, null);

		$tMap->addColumn('CULTURE', 'Culture', 'VARCHAR', false, 5);

		$tMap->addForeignKey('SF_REVIEW_ID', 'SfReviewId', 'INTEGER', 'sf_review', 'ID', false, 11);

		$tMap->addColumn('BALANCE', 'Balance', 'INTEGER', false, 11);

	} // doBuild()

} // SfReviewMapBuilder
